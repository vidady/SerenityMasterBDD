serenity {
   project.name = "Demo Project using Serenity and Cucumber"
   test.root = "testcases"
  restart.browser.for.each = scenario
#   tag.failures = "true"
#   linked.tags = "issue"
}






# Possible screenshot options as per requirement: FOR_EACH_ACTION, BEFORE_AND_AFTER_EACH_STEP, AFTER_EACH_STEP, FOR_FAILURES
serenity.take.screenshots = FOR_FAILURES
serenity.browser.maximized = true
headless.mode = true



environment = run_with_chrome






webdriver {
   base.url = "http:www.gmail.com"
   autodownload = false
   timeouts.implicitlywait=5000
   wait.for.timeout=10000
}







drivers {
    windows {
      webdriver.chrome.driver = src/main/resources/drivers/chromedriver.exe
      webdriver.gecko.driver = src/main/resources/drivers/geckodriver.exe
    }
    mac {
     webdriver.chrome.driver = src/main/resources/drivers/chromedriver
    }
    linux {
      webdriver.chrome.driver = src/main/resources/drivers/chromedriver
    }
  }





environments {
  run_with_chrome {
    webdriver.driver = chrome
    chrome {
      switches = "--start-maximized;--enable-automation;--no-sandbox;--disable-popup-blocking;--disable-default-apps;--disable-infobars;--disable-extensions;"
      preferences {
        download: {
          prompt_for_download: false
          directory_upgrade: true
          default_directory: "${user.dir}/target/downloaded-files"
        }
      }
    }
  }



  run_with_edge{
  webdriver.driver = edge
  }

  run_with_grid{
    webdriver.driver = remote
    webdriver.remote.url = "http://localhost:4444/"
    webdriver.remote.driver = "chrome"
    }


  run_with_firefox {
    webdriver.driver = firefox


    firefox {
    arguments = "-maximized;-enable-automation;-no-sandbox;-disable-popup-blocking;-disable-default-apps;-disable-infobars;-disable-extensions;"
      preferences {
        browser {
          download {
            folderList = 2
            dir = "$TEMPDIR/downloads"
            manager.showWhenStarting = false
            useDownloadDir = true
          }
        }
      }
      logLevel = INFO
      acceptInsecureCerts = true
      pageLoadStrategy = NORMAL
    }
  }
  #
  # Specify browserstack.user and browserstack.key on the command line, e.g.
  #  mvn verify -Denvironment=run_with_browserstack -Dbrowserstack.user=<MY_BROWSERSTACK_USER> -Dbrowserstack.key=<MY_API_KEY>
  #
  run_with_browserstack {
    webdriver.driver = remote
    webdriver.remote.url = "https://#{browserstack.user}:#{browserstack.key}@hub-cloud.browserstack.com/wd/hub"
    headless.mode = false
    browserstack {
      os = "Windows"
      os_version = "10"
      browser = "Edge"
      browser_version = "latest"
      resolution = "1280x800"
    }
  }

  # Specify saucelabs.username and saucelabs.accessKey on the command line, e.g.
  #  mvn verify -Denvironment=run_with_saucelabs -Dsaucelabs.username=<MY_SAUCELABS_USER> -Dsaucelabs.accessKey=<MY_API_KEY>
  #
  run_with_saucelabs {
    webdriver.driver = remote
    webdriver.remote.url = "https://ondemand.#{saucelabs.datacenter}.saucelabs.com/wd/hub"
    headless.mode = false

    # Some W3C Capabilities
    screenResolution = "1280x1024"
    strictFileInteractability = true
    unhandledPromptBehavior = "ignore"
    timeouts {
      script = 20000
      pageLoad = 400000
      implicit = 1000
    }

    #
    # SauceLabs-specific capabilities
    #
    saucelabs {
      #
      # Mandatory SauceLabs fields
      #
      platformName = "Windows 8"
      browserName = "Internet Explorer"
      browserVersion = "latest"
      #
      # The saucelabs.datacenter property tells Serenity to use SauceLabs for these tests
      #
      datacenter = "us-west-1"

      #
      # Some optional saucelabs-specific fields
      #
      tags = ["end-to-end"]
      maxDuration = 900
    }
  }

}